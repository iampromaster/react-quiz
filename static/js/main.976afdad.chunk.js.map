{"version":3,"sources":["App.js","utils/index.js","components/End.js","components/Modal.js","components/Question.js","components/Start.js","reportWebVitals.js","index.js"],"names":["interval","formatTime","time","Math","floor","End","results","data","onReset","onAnswersCheck","useState","correctAnswers","setCorrectAnswers","useEffect","correct","forEach","result","index","a","answer","className","length","onClick","Modal","onClose","map","i","q","Question","onAnswerUpdate","numberOfQuestions","activeQuestion","onSetActiveQuestion","onSetStep","selected","setSelected","error","setError","radiosWrapper","useRef","findCheckedInput","current","querySelector","checked","changeHandler","e","target","value","question","ref","choices","choice","type","name","onChange","prevState","Start","onQuizStart","App","step","setStep","setActiveQuestion","answers","setAnswers","showModal","setShowModal","setTime","clearInterval","setInterval","prevTime","quizData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+IAUIA,E,uCCVEC,G,MAAa,SAAAC,GAClB,OAAGA,EAAO,GACDA,EAAO,GAAP,WAAgBA,EAAhB,eAA6BA,EAA7B,KAEAC,KAAKC,MAAMF,EAAO,IAAM,IAAOA,EAAO,GAAM,M,OC8BvCG,EA7BH,SAAC,GAAgD,IAA/CC,EAA8C,EAA9CA,QAAQC,EAAsC,EAAtCA,KAAKC,EAAiC,EAAjCA,QAAQC,EAAyB,EAAzBA,eAAeP,EAAU,EAAVA,KAChD,EAA2CQ,mBAAS,GAApD,mBAAOC,EAAP,KAAsBC,EAAtB,KAYA,OAVAC,qBAAU,WACR,IAAIC,EAAS,EACbR,EAAQS,SAAQ,SAACC,EAAOC,GACnBD,EAAOE,IAAMX,EAAKU,GAAOE,QAC1BL,OAGJF,EAAkBE,KACjB,IAGD,qBAAKM,UAAU,OAAf,SACE,qBAAKA,UAAU,eAAf,SACE,sBAAKA,UAAU,UAAf,UACE,8CACA,8BAAIT,EAAJ,OAAwBJ,EAAKc,UAC7B,4BAAG,mCAASlB,KAAKC,MAAOO,EAAiBJ,EAAKc,OAAS,KAApD,SACH,8BAAG,gDAA4BpB,EAAWC,MAC1C,wBAAQkB,UAAU,sBAAsBE,QAASb,EAAjD,gCACA,wBAAQW,UAAU,oBAAoBE,QAASd,EAA/C,+BCEKe,EA3BD,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,QAAQlB,EAAkB,EAAlBA,QAAQC,EAAU,EAAVA,KAC9B,OACE,sBAAKa,UAAU,kBAAf,UACE,qBAAKA,UAAU,mBAAmBE,QAASE,IAC3C,sBAAKJ,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,mBAAGA,UAAU,mBAAb,0BACA,wBAAQA,UAAU,SAASE,QAASE,OAEtC,yBAASJ,UAAU,0BAAnB,SACE,6BACGd,EAAQmB,KAAI,SAACT,EAAOU,GAELV,EAAOW,EACLX,EAAOE,EAAMX,EAAKmB,GAAGP,OACsBH,EAAOE,EAC/DF,EAAOE,IAAMX,EAAKmB,GAAGP,QACrBZ,EAAKmB,GAAGP,qB,OCoCVS,EArDE,SAAC,GAA0F,IAAzFrB,EAAwF,EAAxFA,KAAKsB,EAAmF,EAAnFA,eAAeC,EAAoE,EAApEA,kBAAkBC,EAAkD,EAAlDA,eAAeC,EAAmC,EAAnCA,oBAAoBC,EAAe,EAAfA,UAC1F,EAA+BvB,mBAAS,IAAxC,mBAAOwB,EAAP,KAAgBC,EAAhB,KACA,EAAyBzB,mBAAS,IAAlC,mBAAO0B,EAAP,KAAaC,EAAb,KACMC,EAAgBC,mBAEtB1B,qBAAU,WACR,IAAM2B,EAAmBF,EAAcG,QAAQC,cAAc,iBAC1DF,IACDA,EAAiBG,SAAU,KAE7B,CAACpC,IAEH,IAAMqC,EAAgB,SAACC,GACrBV,EAAYU,EAAEC,OAAOC,OAClBX,GACDC,EAAS,KAiBb,OACE,qBAAKjB,UAAU,OAAf,SACE,qBAAKA,UAAU,eAAf,SACE,sBAAKA,UAAU,UAAf,UACE,oBAAIA,UAAU,OAAd,SAAsBb,EAAKyC,WAC3B,qBAAK5B,UAAU,UAAU6B,IAAKX,EAA9B,SACG/B,EAAK2C,QAAQzB,KAAI,SAAC0B,EAAOzB,GAAR,OACd,wBAAON,UAAU,6BAAjB,UACE,uBAAOgC,KAAK,QAAQC,KAAK,SAASN,MAAOI,EAAQG,SAAUV,IAC1DO,IAFgDzB,QAMxDU,GAAW,qBAAKhB,UAAU,kBAAf,SAAkCgB,IAC9C,wBAAQhB,UAAU,6CAA6CE,QA3B9C,SAACuB,GACxB,GAAgB,KAAbX,EACD,OAAOG,EAAS,4BAElBR,GAAe,SAAA0B,GAAS,4BAAQA,GAAR,CAAkB,CAAC5B,EAAEpB,EAAKyC,SAAS9B,EAAEgB,QAC7DC,EAAY,IACTJ,EAAiBD,EAAkB,EACpCE,EAAoBD,EAAiB,GAErCE,EAAU,IAkBN,0BC/BKuB,EAfD,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACf,OACE,qBAAKrC,UAAU,OAAf,SACE,qBAAKA,UAAU,eAAf,SACE,sBAAKA,UAAU,UAAf,UACE,gDACA,2CACA,wBAAQA,UAAU,2BAA2BE,QAASmC,EAAtD,2B,OL8DKC,EA3DH,WACV,MAAuBhD,mBAAS,GAAhC,mBAAOiD,EAAP,KAAYC,EAAZ,KACA,EAA2ClD,mBAAS,GAApD,mBAAOqB,EAAP,KAAsB8B,EAAtB,KACA,EAA6BnD,mBAAS,IAAtC,mBAAOoD,EAAP,KAAeC,EAAf,KACA,EAAiCrD,oBAAS,GAA1C,mBAAOsD,EAAP,KAAiBC,EAAjB,KACA,EAAuBvD,mBAAS,GAAhC,mBAAOR,EAAP,KAAYgE,EAAZ,KAEArD,qBAAU,WACI,IAAT8C,GACDQ,cAAcnE,KAEf,CAAC2D,IAmBJ,OACE,sBAAKvC,UAAU,MAAf,UACW,IAARuC,GAAc,cAAC,EAAD,CAAOF,YAnBD,WACvBG,EAAQ,GACR5D,EAAWoE,aAAY,WACrBF,GAAQ,SAAAG,GAAQ,OAAIA,EAAW,OAC/B,QAgBQ,IAAPV,GAAc,cAAC,EAAD,CACfpD,KAAM+D,EAAS/D,KAAKwB,GACpBF,eAAgBkC,EAChBjC,kBAAmBwC,EAAS/D,KAAKc,OACjCU,eAAgBA,EAChBC,oBAAqB6B,EACrB5B,UAAW2B,IAGD,IAATD,GAAc,cAAC,EAAD,CACfrD,QAASwD,EACTvD,KAAM+D,EAAS/D,KACfC,QAzBsB,WACxBqD,EAAkB,GAClBE,EAAW,IACXH,EAAQ,GACRM,EAAQ,GACRlE,EAAWoE,aAAY,WACrBF,GAAQ,SAAAG,GAAQ,OAAIA,EAAW,OAC/B,MAmBA5D,eAAgB,kBAAMwD,GAAa,IACnC/D,KAAMA,IAGL8D,GAAa,cAAC,EAAD,CACdxC,QAAU,kBAAMyC,GAAa,IAC7B3D,QAASwD,EACTvD,KAAM+D,EAAS/D,WMrDNgE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.976afdad.chunk.js","sourcesContent":["import React, { useState,useEffect } from 'react'\n\n\nimport './App.css';\nimport End from './components/End';\nimport Modal from './components/Modal';\nimport Question from './components/Question';\nimport Start from './components/Start';\nimport quizData from './data/quiz.json'\n\nlet interval;\n\nconst App = () => {\n  const [step,setStep] = useState(1);\n  const [activeQuestion,setActiveQuestion] = useState(0);\n  const [answers,setAnswers] = useState([]);\n  const [showModal,setShowModal] = useState(false);\n  const [time,setTime] = useState(0);\n\n  useEffect(() => {\n    if(step === 3){\n      clearInterval(interval)\n    }\n  }, [step])\n\n  const quizStartHandler = () => {\n    setStep(2);\n    interval = setInterval(() => {\n      setTime(prevTime => prevTime + 1);\n    },1000)\n  }\n\n  const resetClickHandler = () => {\n    setActiveQuestion(0);\n    setAnswers([]);\n    setStep(2);\n    setTime(0);\n    interval = setInterval(() => {\n      setTime(prevTime => prevTime + 1)\n    },1000);\n  }\n\n  return (\n    <div className=\"App\">\n      {step ===1 &&  <Start onQuizStart={quizStartHandler} />}\n      {step===2 &&   <Question \n      data={quizData.data[activeQuestion]}\n      onAnswerUpdate={setAnswers}\n      numberOfQuestions={quizData.data.length}\n      activeQuestion={activeQuestion}\n      onSetActiveQuestion={setActiveQuestion}\n      onSetStep={setStep}\n\n      />}\n      {step === 3 && <End \n      results={answers}\n      data={quizData.data}\n      onReset={resetClickHandler}\n      onAnswersCheck={() => setShowModal(true)}\n      time={time}\n      />}\n\n      {showModal && <Modal \n      onClose={ () => setShowModal(false)}\n      results={answers}\n      data={quizData.data}\n      />}\n    </div>\n  );\n}\n\nexport default App;\n","const formatTime = time => {\n if(time < 60){\n   return time < 10 ? `0${time}s` : `${time}s`;\n }else {\n   return Math.floor(time / 60) + 'm' + (time % 60) + 's';\n }\n}\n\nexport {\n  formatTime\n}","import React,{useEffect,useState} from 'react'\n\nimport {formatTime} from '../utils/'\n\n\nconst End = ({results,data,onReset,onAnswersCheck,time}) => {\n  const [correctAnswers,setCorrectAnswers] = useState(0);\n\n  useEffect(() => {\n    let correct =0;\n    results.forEach((result,index) => {\n      if(result.a === data[index].answer){\n        correct++;\n      }\n    });\n    setCorrectAnswers(correct);\n  }, [])\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-content\">\n        <div className=\"content\">\n          <h3>Your results</h3>\n          <p>{correctAnswers} of {data.length}</p>\n          <p><strong>{Math.floor((correctAnswers / data.length)* 100)}%</strong></p>\n          <p><strong>Your time:</strong>{formatTime(time)}</p>\n          <button className=\"button is-info mr-2\" onClick={onAnswersCheck}>Check your answers</button>\n          <button className=\"button is-success\" onClick={onReset}>Try again</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default End\n","import React from 'react'\n\nconst Modal = ({onClose,results,data}) => {\n  return (\n    <div className=\"modal is-active\">\n      <div className=\"modal-background\" onClick={onClose}></div>\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <p className=\"modal-card-title\">Your answers</p>\n          <button className=\"delete\" onClick={onClose}></button>\n        </header>\n        <section className=\"modal-card-body content\">\n          <ul>\n            {results.map((result,i) => {\n              <li key={i} className=\"mb-6\" >\n                <p><strong>{result.q}</strong></p>\n                <p className={result.a === data[i].answer ? 'has-background-success has-text-white p-2' : \n               'has-background-danger has-text-white p-2'}>Your answer: {result.a}</p>\n                {result.a !== data[i].answer && <p className=\"has-background-link has-text-white p-2\">Correct answer:\n                {data[i].answer}</p> }\n              </li>\n            })}\n          </ul>\n        </section>\n      </div>\n    </div>\n  )\n}\n\nexport default Modal\n","import React,{ useState,useEffect,useRef } from 'react'\n\nconst Question = ({data,onAnswerUpdate,numberOfQuestions,activeQuestion,onSetActiveQuestion,onSetStep}) => {\n  const [selected,setSelected] = useState('');\n  const [error,setError] = useState('');\n  const radiosWrapper = useRef();\n\n  useEffect(() => {\n    const findCheckedInput = radiosWrapper.current.querySelector('input:checked')\n    if(findCheckedInput){\n      findCheckedInput.checked = false\n    }\n  },[data]);\n\n  const changeHandler = (e) => {\n    setSelected(e.target.value);\n    if(error){\n      setError('');\n    }\n  }\n\n  const nextClickHandler = (e) =>{\n    if(selected === ''){\n      return setError('Please selectone option!');\n    }\n    onAnswerUpdate(prevState => [...prevState,{q:data.question,a:selected}]);\n    setSelected('');\n    if(activeQuestion < numberOfQuestions-1){\n      onSetActiveQuestion(activeQuestion + 1);\n    }else {\n      onSetStep(3);\n    }\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-content\">\n        <div className=\"content\">\n          <h2 className=\"mb-5\">{data.question}</h2>\n          <div className=\"control\" ref={radiosWrapper}>\n            {data.choices.map((choice,i) =>(\n                <label className=\"radio has-background-light\" key={i}>\n                  <input type=\"radio\" name=\"answer\" value={choice} onChange={changeHandler}  />\n                  {choice}\n                </label>\n            ))}\n          </div>\n          {error &&   <div className=\"has-text-danger\">{error}</div>}\n          <button className=\"button is-link is-medium is-fullwidth mt-4\" onClick={nextClickHandler}>Next</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Question\n","import React from 'react'\n\nconst Start = ({ onQuizStart }) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-content\">\n        <div className=\"content\">\n          <h1>Start the quiz</h1>\n          <p>Good luck!</p>\n          <button className=\"button is-info is-medium\" onClick={onQuizStart}>Start</button>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Start\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bulma/css/bulma.min.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}